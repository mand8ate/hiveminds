import { motion, useAnimation } from "framer-motion";
import { useInView } from "react-intersection-observer";
import React from "react";

export const SVGPatterns = {
  hivepattern: () => {
    const controls = useAnimation();
    const { ref, inView } = useInView({
      triggerOnce: false,
      threshold: 0.5,
      onChange: (inView) => {
        if (inView) {
          controls.start("visible");
        } else {
          controls.start("hidden");
        }
      },
    });

    const variants = {
      hidden: { opacity: 0, y: 50 },
      visible: {
        opacity: 1,
        y: 0,
        transition: {
          type: "spring",
          stiffness: 100,
          damping: 10,
          staggerChildren: 0.02,
          delayChildren: 0.03,
        },
      },
    };

    return (
      <motion.svg
        ref={ref}
        viewBox="0 0 330 600"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        initial="hidden"
        animate={controls}
        variants={variants}
      >
        {fillPaths.map((path, index) => (
          <motion.path
            key={`fill-${index}`}
            d={path}
            fill="#FF9900"
            variants={variants}
          />
        ))}
        {strokePaths.map((path, index) => (
          <motion.path
            key={`stroke-${index}`}
            d={path}
            stroke="#FF9900"
            variants={variants}
          />
        ))}
      </motion.svg>
    );
  },
};

// Assume fillPaths and strokePaths arrays are defined elsewhere in the code.

const fillPaths = [
  "M30 0L55.9808 15V45L30 60L4.01924 45V15L30 0Z",
  "M84 0L109.981 15V45L84 60L58.0192 45V15L84 0Z",
  "M84 0L109.981 15V45L84 60L58.0192 45V15L84 0Z",
  "M138 0L163.981 15V45L138 60L112.019 45V15L138 0Z",
  "M192 0L217.981 15V45L192 60L166.019 45V15L192 0Z",
  "M246 0L271.981 15V45L246 60L220.019 45V15L246 0Z",
  "M57 47L82.9808 62V92L57 107L31.0192 92V62L57 47Z",
  "M111 47L136.981 62V92L111 107L85.0192 92V62L111 47Z",
  "M165 47L190.981 62V92L165 107L139.019 92V62L165 47Z",
  "M57 141L82.9808 156V186L57 201L31.0192 186V156L57 141Z",
  "M111 141L136.981 156V186L111 201L85.0192 186V156L111 141Z",
  "M219 141L244.981 156V186L219 201L193.019 186V156L219 141Z",
  "M192 188L217.981 203V233L192 248L166.019 233V203L192 188Z",
  "M246 188L271.981 203V233L246 248L220.019 233V203L246 188Z",
  "M111 235L136.981 250V280L111 295L85.0192 280V250L111 235Z",
  "M30 376L55.9808 391V421L30 436L4.01924 421V391L30 376Z",
  "M84 376L109.981 391V421L84 436L58.0193 421V391L84 376Z",
  "M56.9808 329L82.9615 344V374L56.9808 389L31 374V344L56.9808 329Z",
  "M165 235L190.981 250V280L165 295L139.019 280V250L165 235Z",
];

const strokePaths = [
  "M274.519 15.2887L300 0.57735L325.481 15.2887V44.7113L300 59.4226L274.519 44.7113V15.2887Z",
  "M193.519 62.2887L219 47.5774L244.481 62.2887V91.7113L219 106.423L193.519 91.7113V62.2887Z",
  "M247.519 62.2887L273 47.5774L298.481 62.2887V91.7113L273 106.423L247.519 91.7113V62.2887Z",
  "M4.51924 109.289L30 94.5774L55.4808 109.289V138.711L30 153.423L4.51924 138.711V109.289Z",
  "M58.5192 109.289L84 94.5774L109.481 109.289V138.711L84 153.423L58.5192 138.711V109.289Z",
  "M112.519 109.289L138 94.5774L163.481 109.289V138.711L138 153.423L112.519 138.711V109.289Z",
  "M166.519 109.289L192 94.5774L217.481 109.289V138.711L192 153.423L166.519 138.711V109.289Z",
  "M220.519 109.289L246 94.5774L271.481 109.289V138.711L246 153.423L220.519 138.711V109.289Z",
  "M139.519 156.289L165 141.577L190.481 156.289V185.711L165 200.423L139.519 185.711V156.289Z",
  "M247.519 156.289L273 141.577L298.481 156.289V185.711L273 200.423L247.519 185.711V156.289Z",
  "M4.51924 203.289L30 188.577L55.4808 203.289V232.711L30 247.423L4.51924 232.711V203.289Z",
  "M58.5192 203.289L84 188.577L109.481 203.289V232.711L84 247.423L58.5192 232.711V203.289Z",
  "M112.519 203.289L138 188.577L163.481 203.289V232.711L138 247.423L112.519 232.711V203.289Z",
  "M193.519 250.289L219 235.577L244.481 250.289V279.711L219 294.423L193.519 279.711V250.289Z",
  "M31.5192 250.289L57 235.577L82.4808 250.289V279.711L57 294.423L31.5192 279.711V250.289Z",
  "M4.51924 297.289L30 282.577L55.4808 297.289V326.711L30 341.423L4.51924 326.711V297.289Z",
  "M58.5193 297.289L84 282.577L109.481 297.289V326.711L84 341.423L58.5193 326.711V297.289Z",
];
